<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.heal.review.mapper.ReviewMapper">
	<resultMap type="Review" id="reviewIdMap">
		<id property="no" column="NO"/>
		<result property="id" column="TITLE"/>
		<result property="cont" column="CONT"/>
		<result property="revstar" column="REVSTAR"/>
		<result property="revlike" column="REVLIKE"/>
		<result property="createdate" column="CREATEDATE"/>
		<result property="memberno" column="MEMBERNO"/>
		<result property="hotelno" column="HOTELNO"/>
		<result property="campno" column="CAMPNO"/>
		<result property="festivalno" column="FESTIVALNO"/>
		<result property="foodno" column="FOODNO"/>
		<result property="parkno" column="PARKNO"/>
	</resultMap>
	
	<select id="selectNew" parameterType="int" resultMap="reviewIdMap">
 		SELECT * 
 		FROM (SELECT ROWNUM NUM, 
 					 NO, 
 					 TITLE,
 					 CONT,
 					 REVSTAR,
 					 REVLIKE,
 					 CREATEDATE,
 					 MEMBERNO, 
 					 CAMPNO, 
 					 HOTELNO, 
 					 FESTIVALNO, 
 					 FOODNO, 
 					 PARKNO 
 			  FROM (SELECT * 
 			  		FROM TBL_REVIEW 
 			  		ORDER BY NO DESC))
		WHERE NUM <![CDATA[<=]]> 5 AND MEMBERNO = #{no}
	</select>
	
	<insert id="insertReview" parameterType="Review" >
		INSERT INTO TBL_REVIEW (
 			NO,
            TITLE,
            CONT,
 			REVSTAR,
 			REVLIKE,
 			CREATEDATE,
 			MEMBERNO,
            HOTELNO,
 			CAMPNO,  
 			FESTIVALNO, 
 			FOODNO, 
 			PARKNO 
		) VALUES (
			REVIEW_SEQ.NEXTVAL,
			NULL,
			#{cont},
 			#{revstar},
 			${0},
 			SYSDATE,
 			#{memberno},
			<if test="hotelno != null">
				#{hotelno},
			</if>
			<if test="campno != null">
				#{campno},
			</if>
			<if test="festivalno != null">
				#{festivalno},
			</if>
			<if test="foodno != null">
				#{foodno},
			</if>
			<if test="parkno != null">
				#{parkno}
			</if>
					
 		)
	</insert>
	
	<update id="setLike" parameterType="int">
		UPDATE TBL_REVIEW
		SET REVLIKE = #{like}
		WHERE NO = #{no}
	</update>




<!-- 	@@@캠핑@@@ -->		
	<select id="selectRevCamp" parameterType="map" resultMap="reviewIdMap">
 		SELECT R.*, M.ID
 		FROM TBL_REVIEW R
 		JOIN TBL_MEMBER M ON (R.MEMBERNO = M.NO)
 		WHERE R.CAMPNO = ${no} <!-- ${} -> '' 안붙음 -> 정수가능 -->
 		<if test='sort.equals("new")'> <!-- 최신순 -->
 			ORDER BY R.NO DESC
 		</if>
 		<if test='sort.equals("old")'>
 			ORDER BY R.NO ASC
 		</if>
 		<if test='sort.equals("star")'>
 			ORDER BY R.REVSTAR DESC
 		</if>
 		<if test='sort.equals("like")'>
 			ORDER BY R.REVLIKE DESC
 		</if>
	</select>
	
	<select id="getCountByCamp" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM TBL_REVIEW
		WHERE CAMPNO = #{no}
	</select>
<!-- 	@@@캠핑@@@ -->	
	
	

<!-- 	@@@푸드@@@ -->
	<select id="selectRevFood" parameterType="map" resultMap="reviewIdMap">
			SELECT R.*, M.ID
			FROM TBL_REVIEW R
			JOIN TBL_MEMBER M ON (R.MEMBERNO = M.NO)
			WHERE R.FOODNO = ${no} <!-- ${} -> '' 안붙음 -> 정수가능 -->
		<if test='sort.equals("new")'> <!-- 최신순 -->
 			ORDER BY R.NO DESC
 		</if>
 		<if test='sort.equals("old")'>
 			ORDER BY R.NO ASC
 		</if>
 		<if test='sort.equals("star")'>
 			ORDER BY R.REVSTAR DESC
 		</if>
 		<if test='sort.equals("like")'>
 			ORDER BY R.REVLIKE DESC
 		</if>
	</select>
	
	<select id="selectRevByFoodCnt" resultType="int" parameterType="int">
	 	SELECT COUNT(*)
	 		FROM TBL_REVIEW 
	 		WHERE FOODNO = ${no}
	</select>
<!-- 	@@@푸드@@@ -->

<!-- 	@@@호텔@@@ -->
	<select id="selectRevHotel" parameterType="map" resultMap="reviewIdMap">
			SELECT R.*, M.ID
			FROM TBL_REVIEW R
			JOIN TBL_MEMBER M ON (R.MEMBERNO = M.NO)
			WHERE R.HOTELNO = ${no} <!-- ${} -> '' 안붙음 -> 정수가능 -->
		<if test='sort.equals("new")'> <!-- 최신순 -->
 			ORDER BY R.NO DESC
 		</if>
 		<if test='sort.equals("old")'>
 			ORDER BY R.NO ASC
 		</if>
 		<if test='sort.equals("star")'>
 			ORDER BY R.REVSTAR DESC
 		</if>
 		<if test='sort.equals("like")'>
 			ORDER BY R.REVLIKE DESC
 		</if>
	</select>
	
	<select id="selectRevByHotelCnt" resultType="int" parameterType="int">
	 	SELECT COUNT(*)
	 		FROM TBL_REVIEW 
	 		WHERE HOTELNO = ${no}
	</select>
<!-- 	@@@호텔@@@ -->

<!-- @@@ 축제 -->
	<select id="selectRevFestival" parameterType="map" resultMap="reviewIdMap">
 		SELECT R.*, M.ID
 		FROM TBL_REVIEW R
 		JOIN TBL_MEMBER M ON (R.MEMBERNO = M.NO)
 		AND R.FESTIVALNO = ${no} <!-- ${} -> '' 안붙음 -> 정수가능 -->
 		<if test='sort.equals("new")'> <!-- 최신순 -->
 			ORDER BY R.NO DESC
 		</if>
 		<if test='sort.equals("old")'>
 			ORDER BY R.NO ASC
 		</if>
 		<if test='sort.equals("star")'>
 			ORDER BY R.REVSTAR DESC	
 		</if>
 		<if test='sort.equals("like")'>
 			ORDER BY R.REVLIKE DESC
 		</if>
	</select>
	
	<select id="getCountByFestival" resultType="int" parameterType="int">
		SELECT COUNT(*)
		FROM TBL_REVIEW
		WHERE FESTIVALNO = #{no}
	</select>
<!-- @@@ 축제 -->

<!-- 	@@@공원@@@ -->
	<select id="selectRevPark" parameterType="map" resultMap="reviewIdMap">
			SELECT R.*, M.ID
			FROM TBL_REVIEW R
			JOIN TBL_MEMBER M ON (R.MEMBERNO = M.NO)
			WHERE R.PARKNO = ${no} <!-- ${} -> '' 안붙음 -> 정수가능 -->
		<if test='sort.equals("new")'> <!-- 최신순 -->
 			ORDER BY R.NO DESC
 		</if>
 		<if test='sort.equals("old")'>
 			ORDER BY R.NO ASC
 		</if>
 		<if test='sort.equals("star")'>
 			ORDER BY R.REVSTAR DESC
 		</if>
 		<if test='sort.equals("like")'>
 			ORDER BY R.REVLIKE DESC
 		</if>
	</select>
	
	<select id="selectRevByParkCnt" resultType="int" parameterType="int">
	 	SELECT COUNT(*)
	 		FROM TBL_REVIEW 
	 		WHERE PARKNO = ${no}
	</select>
<!-- 	@@@공원@@@ -->

	<select id="getLike" parameterType="int" resultType="int">
		SELECT REVLIKE
		FROM TBL_REVIEW
		WHERE NO = #{no}
	</select>
	
	<delete id="delete" parameterType="int">
 		DELETE  
 		TBL_REVIEW
 		WHERE NO = #{no}
	</delete>
	
	<!-- <![CDATA[]]> 내부에 문자 그대로 DB에 입력가능함 -->
	
</mapper>